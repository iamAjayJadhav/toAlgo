{"version":3,"sources":["images/girl.svg","images/boyMaze.svg","images/about.svg","images/1.jpg","components/Header.style.js","components/Header.js","pages/Main.js","Helpers/sleepFunction.js","pages/Sorting.js","PathfindingVisualizer/Node/Node.jsx","algorithms/dijkstra.js","algorithms/aStar.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","PathfindingVisualizer/PathfindingVisualizer.jsx","PathfindingNavbar/PathNav.style.js","algorithms/bfs.js","algorithms/dfs.js","components/ButtonElements.js","videos/HeroSectionVideo.mp4","components/HeroSection/HeroElements.js","components/HeroSection/index.js","components/InfoSection/InfoElements.js","components/InfoSection/index.js","components/InfoSection/data.js","pages/index.js","pages/App.js","index.js"],"names":["Buttons","styled","p","props","disabled","Wrapper","div","SortWrapper","Header","randomList","rangeChange","bubbleOnClick","selectionSort","countingSort","insertionSort","QuickSort_call","customarray","onClick","Main","currentIndex","nextIndex","data","width","screen","length","Container","BlocksContainer","map","size","i","Bar","height","active","style","backgroundColor","Basement","className","Sleep","milliseconds","Promise","resolve","setTimeout","Sorting","useState","setSize","arr","setArr","setCurrentIndex","currentNext","setCurrentNext","useEffect","updateList","randomArr","Array","from","generateRandomInteger","min","max","Math","floor","random","a","len","swapped","tmp","list","j","count","key","range","prompt","sizeOfList","selection","undefined","Node","this","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","id","Component","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","push","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","AStar","sortByDistance","distanceToFinishNode","SidebarContainer","isOpen","CloseIcon","FaTimes","Icon","SidebarWrapper","SidebarMenu","ul","SidebarLinks","LinkS","Sidebar","LinkR","toggle","to","Nav","nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","li","NavLinks","Navbar","smooth","duration","spy","exaact","offset","PathfindingVisualizer","getInitialGrid","rowCount","state","ROW_COUNT","colCount","COLUMN_COUNT","initialGrid","currentRow","createNode","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","abs","isNode","mouseIsPressed","MOBILE_ROW_COUNT","MOBILE_COLUMN_COUNT","isRunning","isStartNode","isFinishNode","isWallNode","currRow","currCol","isDesktopView","handleMouseDown","bind","handleMouseLeave","toggleIsRunning","setState","clearGrid","clearWalls","alert","isGridClear","document","getElementById","newGrid","getNewGridWithWallToggled","nodeClassName","slice","algo","nextNodesStack","currentNode","nextNode","bfs","pop","dfs","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animate","animateShortestPath","type","visualize","toggleView","onMouseLeave","rowIdx","nodeIdx","handleMouseEnter","handleMouseUp","newNode","Button","Link","primary","big","dark","fontBig","HeroContainer","HeroBg","VideoBg","video","HeroContent","HeroH1","h1","HeroP","HeroBtnWrapper","ArrowForward","MdArrowForward","ArrowRight","MdKeyboardArrowRight","HeroSection","hover","setHover","onHover","autoPlay","loop","muted","src","Video","InfoContainer","lightBg","InfoWrapper","InfoRow","imgStart","Column1","Column2","TextWrapper","TopLine","Heading","lightText","Subtitle","darkText","ImgWrap","Img","img","BtnWrap","InfoSection","topline","headline","description","buttonLabel","alt","dark2","toSortObjectData","lightTextDesc","require","default","toPathfindObjectData","About","Contact","Home","setIsOpen","App","path","exact","component","window","location","replace","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a38a653d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/girl.8ee95084.svg\";","export default __webpack_public_path__ + \"static/media/boyMaze.f3525aa7.svg\";","export default __webpack_public_path__ + \"static/media/about.2832bb8c.svg\";","export default __webpack_public_path__ + \"static/media/1.48313b59.jpg\";","import styled from \"styled-components\"\r\n\r\nexport const Buttons = styled.p`\r\n  color: #fff;\r\n  cursor: ${(props) => (props.disabled ? \"cursor\" : \"pointer\")};\r\n  font-size: 15px;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n\r\n  &: hover {\r\n    color: #000;\r\n  }\r\n`\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-content: center;\r\n  height: 50px;\r\n  width: 100%;\r\n\r\n  justify-content: space-evenly;\r\n  background-color: #264653;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`\r\n\r\nexport const SortWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 500px;\r\n  align-content: center;\r\n  justify-content: space-evenly;\r\n`\r\nexport const RangeWrapper = styled.div`\r\n  width: 200px;\r\n  align-content: center;\r\n  justify-content: space-evenly;\r\n`\r\n","import React from \"react\"\r\nimport { Buttons, Wrapper, SortWrapper } from \"./Header.style\"\r\nexport default function Header({\r\n  randomList,\r\n  rangeChange,\r\n  bubbleOnClick,\r\n  selectionSort,\r\n  countingSort,\r\n  insertionSort,\r\n  QuickSort_call,\r\n  customarray,\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Buttons onClick={randomList}>Random List</Buttons>\r\n      <Buttons onClick={rangeChange}>Change array size</Buttons>\r\n\r\n      <SortWrapper>\r\n        <Buttons onClick={bubbleOnClick}>Bubble O(n)</Buttons>\r\n        <Buttons onClick={insertionSort}>Insertion</Buttons>\r\n        <Buttons onClick={selectionSort}>Selection</Buttons>\r\n        <Buttons onClick={countingSort}>Counting</Buttons>\r\n        <Buttons onClick={QuickSort_call}>Quick</Buttons>\r\n      </SortWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { Buttons } from \"../components/Header.style\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport \"../pages/Main.css\"\r\nexport default function Main({ currentIndex, nextIndex, data }) {\r\n  const width = screen.width / data.length\r\n  return (\r\n    <Container>\r\n      <BlocksContainer>\r\n        {data.map((size, i) => (\r\n          <>\r\n            <Bar\r\n              height={`${size}px`}\r\n              width={`${width}px`}\r\n              key={i}\r\n              active={currentIndex === i}\r\n              style={nextIndex === i ? { backgroundColor: \"green\" } : null}\r\n            >\r\n              {data.length < 31 && <Buttons disabled>{size}</Buttons>}\r\n            </Bar>\r\n          </>\r\n        ))}\r\n      </BlocksContainer>\r\n\r\n      <Basement>\r\n        <div className=\"Base\">\r\n          <div className=\"leftBase\">\r\n            <h1>Bubble Sort</h1>\r\n            <h4>\r\n              Bubble Sort is the simplest sorting algorithm that works by\r\n              repeatedly swapping the adjacent elements <br /> if they are in\r\n              wrong order.\r\n            </h4>\r\n            <h4>\r\n              Following are the Time and Space complexity for the Bubble Sort\r\n              algorithm.\r\n            </h4>\r\n\r\n            <ul>\r\n              <li>Worst Case Time Complexity [ Big-O ]: O(n2)</li>\r\n              <li>Best Case Time Complexity [Big-omega]: O(n)</li>\r\n              <li>Average Time Complexity [Big-theta]: O(n2)</li>\r\n              <li>Space Complexity: O(1)</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"rightBase\">\r\n            <pre>\r\n              <h1>Pseudocode</h1>\r\n              <h3>\r\n                begin BubbleSort(list)\r\n                <br />\r\n                <br /> &ensp; for all elements of list <br />\r\n                &emsp; &emsp; if list[i] > list[i+1] <br />\r\n                &emsp; &emsp; &emsp; swap(list[i], list[i+1])\r\n                <br />\r\n                &emsp; &emsp; end if <br />\r\n                &emsp;&emsp; end for <br />\r\n                <br />\r\n                &emsp;&emsp; return list <br />\r\n                end BubbleSort\r\n              </h3>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </Basement>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n\r\n  width: 100%;\r\n`\r\nconst BlocksContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`\r\nconst Basement = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 200px;\r\n  background-color: #e2eafc;\r\n  border: 3px solid grey;\r\n`\r\n\r\nconst Bar = styled.div`\r\n  align-items: center;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  background-color: ${(props) => (props.active ? \"blue\" : \"#e63946\")};\r\n  margin-right: 3px;\r\n  ${(props) => props.style}\r\n`\r\n","import { size } from \"../pages/Sorting\"\r\nexport const Sleep = (milliseconds) => {\r\n  return new Promise((resolve) => setTimeout(resolve, milliseconds))\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\"\r\nimport Header from \"../components/Header\"\r\nimport \"./App.style.css\"\r\nimport Main from \"./Main\"\r\n\r\nimport { bubbleSort } from \"../Helpers/sorts\"\r\nimport { Sleep } from \"../Helpers/sleepFunction\"\r\nfunction Sorting() {\r\n  const [size, setSize] = useState(10)\r\n  const [arr, setArr] = useState([])\r\n  const [currentIndex, setCurrentIndex] = useState(null)\r\n  const [currentNext, setCurrentNext] = useState(null)\r\n  const selection = undefined\r\n  useEffect(() => {\r\n    updateList()\r\n  }, [size])\r\n\r\n  const updateList = () => {\r\n    const randomArr = Array.from({ length: size }, () =>\r\n      generateRandomInteger(50, 400)\r\n    )\r\n    setArr(randomArr)\r\n  }\r\n\r\n  const generateRandomInteger = (min, max) => {\r\n    return Math.floor(min + Math.random() * (max + 1 - min))\r\n  }\r\n\r\n  const rangeChange = () => {\r\n    const range = prompt(\"How big do you want the graph to be? (between 5-100)\")\r\n    if (range < 5 || range > 100) {\r\n      rangeChange()\r\n    } else {\r\n      setSize(range)\r\n    }\r\n  }\r\n\r\n  const generateRandomList = () => {\r\n    const sizeOfList = generateRandomInteger(5, 20)\r\n    const randomArr = Array.from({ length: sizeOfList }, () =>\r\n      generateRandomInteger(50, 400)\r\n    )\r\n    setArr(randomArr)\r\n  }\r\n\r\n  const bubbleOnClick = async () => {\r\n    const len = arr.length\r\n    let swapped\r\n    do {\r\n      swapped = false\r\n      for (let i = 0; i < len; i++) {\r\n        setCurrentIndex(i)\r\n        setCurrentNext(i + 1)\r\n        if (arr[i] > arr[i + 1]) {\r\n          let tmp = arr[i]\r\n          arr[i] = arr[i + 1]\r\n          arr[i + 1] = tmp\r\n          swapped = true\r\n        }\r\n        if (size < 21) {\r\n          await Sleep(900)\r\n        } else {\r\n          await Sleep(10)\r\n        }\r\n\r\n        setArr([...arr])\r\n      }\r\n    } while (swapped)\r\n    setCurrentIndex(null)\r\n    setCurrentNext(null)\r\n  }\r\n\r\n  const selectionSort = async () => {\r\n    const list = arr\r\n    const len = list.length\r\n    for (let i = 0; i < len; i++) {\r\n      let min = i\r\n      for (let j = i + 1; j < len; j++) {\r\n        if (list[min] > list[j]) {\r\n          min = j\r\n        }\r\n      }\r\n      if (min !== i) {\r\n        setCurrentIndex(i)\r\n        setCurrentNext(min)\r\n        ;[list[i], list[min]] = [list[min], list[i]]\r\n      }\r\n      if (size < 21) {\r\n        await Sleep(900)\r\n      } else {\r\n        await Sleep(100)\r\n      }\r\n      setArr([...list])\r\n      setCurrentIndex(null)\r\n      setCurrentNext(null)\r\n    }\r\n\r\n    return list\r\n  }\r\n\r\n  let countingSort = async (min, max) => {\r\n    let i = min,\r\n      j = 0,\r\n      len = arr.length,\r\n      count = []\r\n    for (i; i <= max; i++) {\r\n      count[i] = 0\r\n    }\r\n    for (i = 0; i < len; i++) {\r\n      count[arr[i]] += 1\r\n    }\r\n    for (i = min; i <= max; i++) {\r\n      setCurrentIndex(i)\r\n      setCurrentNext(j)\r\n      while (count[i] > 0) {\r\n        arr[j] = i\r\n        j++\r\n        count[i]--\r\n      }\r\n      setArr([...arr])\r\n    }\r\n    return arr\r\n  }\r\n\r\n  const insertionSort = async () => {\r\n    let length = arr.length\r\n    for (let i = 1; i < length; i++) {\r\n      let key = arr[i]\r\n\r\n      let j = i - 1\r\n      while (j >= 0 && arr[j] > key) {\r\n        setCurrentIndex(j)\r\n        setCurrentNext(i)\r\n        arr[j + 1] = arr[j]\r\n        j = j - 1\r\n      }\r\n      arr[j + 1] = key\r\n\r\n      if (size < 21) {\r\n        await Sleep(2000)\r\n      } else {\r\n        await Sleep(100)\r\n      }\r\n      setArr([...arr])\r\n      setCurrentIndex(null)\r\n      setCurrentNext(null)\r\n    }\r\n    return arr\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        rangeChange={rangeChange}\r\n        bubbleOnClick={bubbleOnClick}\r\n        randomList={generateRandomList}\r\n        selectionSort={selectionSort}\r\n        insertionSort={insertionSort}\r\n        countingSort={countingSort}\r\n      />\r\n      <Main\r\n        data={arr}\r\n        currentIndex={currentIndex}\r\n        nextIndex={currentNext}\r\n        selection={selection}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sorting\r\n","import React, {Component} from 'react';\r\n\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n  render() {\r\n    const {\r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      row,\r\n    } = this.props;\r\n    \r\n    const extraClassName = isFinish\r\n      ? 'node-finish'\r\n      : isStart\r\n      ? 'node-start'\r\n      : isWall\r\n      ? 'node-wall'\r\n      : '';\r\n\r\n    return (\r\n      <td\r\n        id={`node-${row}-${col}`}\r\n        className={`node ${extraClassName}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp()}></td>\r\n    );\r\n  }\r\n}\r\n","// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid); // Q: different from using grid or slice of grid???\r\n\r\n  while (unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (!closestNode.isWall) {\r\n      // If the closest node is at a distance of infinity,\r\n      // we must be trapped and should stop.\r\n      if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n      closestNode.isVisited = true;\r\n      visitedNodesInOrder.push(closestNode);\r\n      if (closestNode === finishNode) return visitedNodesInOrder;\r\n      updateUnvisitedNeighbors(closestNode, grid);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n","// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function AStar(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid); // Q: different from using grid or slice of grid???\r\n\r\n  while (unvisitedNodes.length) {\r\n    sortByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (!closestNode.isWall) {\r\n      // If the closest node is at a distance of infinity,\r\n      // we must be trapped and should stop.\r\n      if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n      closestNode.isVisited = true;\r\n      visitedNodesInOrder.push(closestNode);\r\n      if (closestNode === finishNode) return visitedNodesInOrder;\r\n      updateUnvisitedNeighbors(closestNode, grid);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\nfunction sortByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1 + neighbor.distanceToFinishNode;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n","import styled from \"styled-components\"\r\nimport { FaTimes } from \"react-icons/fa\"\r\n\r\nimport { Link as LinkS } from \"react-scroll\"\r\n\r\nimport { Link as LinkR } from \"react-scroll\"\r\nexport const SidebarContainer = styled.div`\r\n  position: fixed;\r\n  z-index: 999;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #0d0d0d;\r\n  display: grid;\r\n  align-items: center;\r\n  top: 0;\r\n  left: 0;\r\n  transform: 0.3 ease-in-out;\r\n  opacity: ${({ isOpen }) => (isOpen ? \"100%\" : \"0\")};\r\n  top: ${({ isOpen }) => (isOpen ? \"0\" : \"-100%\")};\r\n`\r\n\r\nexport const CloseIcon = styled(FaTimes)`\r\n  color: #fff;\r\n`\r\nexport const Icon = styled.div`\r\n  position: absolute;\r\n  top: 1.2rem;\r\n  right: 1.5rem;\r\n  background: transparent;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  outline: none;\r\n`\r\n\r\nexport const SidebarWrapper = styled.div`\r\n  color: #fff;\r\n`\r\nexport const SidebarMenu = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: repeat(6, 80px);\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    grid-template-rows: repeat(6, 60px);\r\n  }\r\n`\r\n\r\nexport const SidebarLinks = styled(LinkS)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5rem;\r\n  text-decoration: none;\r\n  transition: 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n\r\n  &::hover {\r\n    color: #01bf71;\r\n    transition: 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nexport const SidebarRoute = styled(LinkR)`\r\n  border-radius: 50px;\r\n  background: #01bf71;\r\n  white-space: nowrap;\r\n  padding: 16px 64px;\r\n  color: #010606;\r\n  font-size: 16px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2 ease-in-out;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\"\r\nimport {\r\n  SidebarContainer,\r\n  CloseIcon,\r\n  Icon,\r\n  SidebarLinks,\r\n  SidebarRoute,\r\n  SidebarWrapper,\r\n  SidebarMenu,\r\n} from \"./SidebarElements\"\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n  return (\r\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n      <Icon onClick={toggle}>\r\n        <CloseIcon />\r\n      </Icon>\r\n      <SidebarWrapper>\r\n        <SidebarMenu>\r\n          <SidebarLinks to=\"Sorting\" onClick={toggle}>\r\n            to Sort\r\n          </SidebarLinks>\r\n\r\n          <SidebarLinks to=\"Pathfinding\" onClick={toggle}>\r\n            to Pathfind\r\n          </SidebarLinks>\r\n          <SidebarLinks to=\"About\" onClick={toggle}>\r\n            About\r\n          </SidebarLinks>\r\n          <SidebarLinks to=\"Contact\" onClick={toggle}>\r\n            Contact\r\n          </SidebarLinks>\r\n        </SidebarMenu>\r\n      </SidebarWrapper>\r\n    </SidebarContainer>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import styled from \"styled-components\"\r\nimport { Link as LinkR } from \"react-router-dom\"\r\nimport { Link as LinkS } from \"react-scroll\"\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 60px;\r\n  margin-top: -60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    transition: 0.8s all ease;\r\n  }\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 60px;\r\n  z-index: 1;\r\n  width: 100%;\r\n  padding: 0 24px;\r\n  max-width: 1100px;\r\n`\r\nexport const NavLogo = styled(LinkR)`\r\n  color: #fff;\r\n  justify-self: flex-start;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 24px;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n`\r\n\r\nexport const MobileIcon = styled.div`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 60%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nexport const NavMenu = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n  text-align: center;\r\n  margin-right: -22px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const NavItem = styled.li`\r\n  height: 40px;\r\n`\r\n\r\nexport const NavLinks = styled(LinkS)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    border-bottom: 3px solid #01bf71;\r\n  }\r\n`\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\"\r\nimport { FaBars } from \"react-icons/fa\"\r\nimport {\r\n  NavLogo,\r\n  Nav,\r\n  NavbarContainer,\r\n  NavItem,\r\n  NavLinks,\r\n  NavMenu,\r\n  MobileIcon,\r\n} from \"./NavbarElements\"\r\n\r\nconst Navbar = ({ toggle }) => {\r\n  const toggleHome = () => {}\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavbarContainer>\r\n          <NavLogo to=\"/\" onClick={toggleHome}>\r\n            toAlgo\r\n          </NavLogo>\r\n          <MobileIcon onClick={toggle}>\r\n            <FaBars />\r\n          </MobileIcon>\r\n          <NavMenu>\r\n            <NavItem>\r\n              <NavLinks\r\n                to=\"Pathfinding\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exaact=\"true\"\r\n                offset={-50}\r\n              >\r\n                to Pathfind\r\n              </NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks\r\n                to=\"Sorting\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exaact=\"true\"\r\n                offset={-50}\r\n              >\r\n                to Sort\r\n              </NavLinks>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLinks\r\n                to=\"About\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exaact=\"true\"\r\n                offset={-50}\r\n              >\r\n                About\r\n              </NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks\r\n                to=\"Contact\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exaact=\"true\"\r\n                offset={-50}\r\n              >\r\n                Contact\r\n              </NavLinks>\r\n            </NavItem>\r\n          </NavMenu>\r\n        </NavbarContainer>\r\n      </Nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from \"react\"\r\nimport Node from \"./Node/Node\"\r\nimport { dijkstra } from \"../algorithms/dijkstra\"\r\nimport { AStar } from \"../algorithms/aStar\"\r\nimport { dfs } from \"../algorithms/dfs\"\r\nimport { bfs } from \"../algorithms/bfs\"\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport \"./PathfindingVisualizer.css\"\r\nimport Header from \"../components/Header\"\r\nimport { styled } from \"@material-ui/core\"\r\nimport PathNav from \"../PathfindingNavbar/PathNav.style\"\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      grid: [],\r\n      START_NODE_ROW: 7,\r\n      FINISH_NODE_ROW: 7,\r\n      START_NODE_COL: 10,\r\n      FINISH_NODE_COL: 40,\r\n      mouseIsPressed: false,\r\n      ROW_COUNT: 15,\r\n      COLUMN_COUNT: 51,\r\n      MOBILE_ROW_COUNT: 10,\r\n      MOBILE_COLUMN_COUNT: 10,\r\n      isRunning: false,\r\n      isStartNode: false,\r\n      isFinishNode: false,\r\n      isWallNode: false, // xxxxxxx\r\n      currRow: 0,\r\n      currCol: 0,\r\n      isDesktopView: true,\r\n    }\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this)\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this)\r\n    this.toggleIsRunning = this.toggleIsRunning.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const grid = this.getInitialGrid()\r\n    this.setState({ grid })\r\n  }\r\n\r\n  toggleIsRunning() {\r\n    this.setState({ isRunning: !this.state.isRunning })\r\n  }\r\n\r\n  toggleView() {\r\n    if (!this.state.isRunning) {\r\n      this.clearGrid()\r\n      this.clearWalls()\r\n      const isDesktopView = !this.state.isDesktopView\r\n      let grid\r\n      if (isDesktopView) {\r\n        grid = this.getInitialGrid(\r\n          this.state.ROW_COUNT,\r\n          this.state.COLUMN_COUNT\r\n        )\r\n        this.setState({ isDesktopView, grid })\r\n      } else {\r\n        if (\r\n          this.state.START_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\r\n          this.state.FINISH_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\r\n          this.state.START_NODE_COL > this.state.MOBILE_COLUMN_COUNT ||\r\n          this.state.FINISH_NODE_COL > this.state.MOBILE_COLUMN_COUNT\r\n        ) {\r\n          alert(\"Start & Finish Nodes Must Be within 10 Rows x 20 Columns\")\r\n        } else {\r\n          grid = this.getInitialGrid(\r\n            this.state.MOBILE_ROW_COUNT,\r\n            this.state.MOBILE_COLUMN_COUNT\r\n          )\r\n          this.setState({ isDesktopView, grid })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /******************** Set up the initial grid ********************/\r\n  getInitialGrid = (\r\n    rowCount = this.state.ROW_COUNT,\r\n    colCount = this.state.COLUMN_COUNT\r\n  ) => {\r\n    const initialGrid = []\r\n    for (let row = 0; row < rowCount; row++) {\r\n      const currentRow = []\r\n      for (let col = 0; col < colCount; col++) {\r\n        currentRow.push(this.createNode(row, col))\r\n      }\r\n      initialGrid.push(currentRow)\r\n    }\r\n    return initialGrid\r\n  }\r\n\r\n  createNode = (row, col) => {\r\n    return {\r\n      row,\r\n      col,\r\n      isStart:\r\n        row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\r\n      isFinish:\r\n        row === this.state.FINISH_NODE_ROW &&\r\n        col === this.state.FINISH_NODE_COL,\r\n      distance: Infinity,\r\n      distanceToFinishNode:\r\n        Math.abs(this.state.FINISH_NODE_ROW - row) +\r\n        Math.abs(this.state.FINISH_NODE_COL - col),\r\n      isVisited: false,\r\n      isWall: false,\r\n      previousNode: null,\r\n      isNode: true,\r\n    }\r\n  }\r\n\r\n  /******************** Control mouse events ********************/\r\n  handleMouseDown(row, col) {\r\n    if (!this.state.isRunning) {\r\n      if (this.isGridClear()) {\r\n        if (\r\n          document.getElementById(`node-${row}-${col}`).className ===\r\n          \"node node-start\"\r\n        ) {\r\n          this.setState({\r\n            mouseIsPressed: true,\r\n            isStartNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          })\r\n        } else if (\r\n          document.getElementById(`node-${row}-${col}`).className ===\r\n          \"node node-finish\"\r\n        ) {\r\n          this.setState({\r\n            mouseIsPressed: true,\r\n            isFinishNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          })\r\n        } else {\r\n          const newGrid = getNewGridWithWallToggled(this.state.grid, row, col)\r\n          this.setState({\r\n            grid: newGrid,\r\n            mouseIsPressed: true,\r\n            isWallNode: true,\r\n            currRow: row,\r\n            currCol: col,\r\n          })\r\n        }\r\n      } else {\r\n        this.clearGrid()\r\n      }\r\n    }\r\n  }\r\n\r\n  isGridClear() {\r\n    for (const row of this.state.grid) {\r\n      for (const node of row) {\r\n        const nodeClassName = document.getElementById(\r\n          `node-${node.row}-${node.col}`\r\n        ).className\r\n        if (\r\n          nodeClassName === \"node node-visited\" ||\r\n          nodeClassName === \"node node-shortest-path\"\r\n        ) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.isRunning) {\r\n      if (this.state.mouseIsPressed) {\r\n        const nodeClassName = document.getElementById(`node-${row}-${col}`)\r\n          .className\r\n        if (this.state.isStartNode) {\r\n          if (nodeClassName !== \"node node-wall\") {\r\n            const prevStartNode = this.state.grid[this.state.currRow][\r\n              this.state.currCol\r\n            ]\r\n            prevStartNode.isStart = false\r\n            document.getElementById(\r\n              `node-${this.state.currRow}-${this.state.currCol}`\r\n            ).className = \"node\"\r\n\r\n            this.setState({ currRow: row, currCol: col })\r\n            const currStartNode = this.state.grid[row][col]\r\n            currStartNode.isStart = true\r\n            document.getElementById(`node-${row}-${col}`).className =\r\n              \"node node-start\"\r\n          }\r\n          this.setState({ START_NODE_ROW: row, START_NODE_COL: col })\r\n        } else if (this.state.isFinishNode) {\r\n          if (nodeClassName !== \"node node-wall\") {\r\n            const prevFinishNode = this.state.grid[this.state.currRow][\r\n              this.state.currCol\r\n            ]\r\n            prevFinishNode.isFinish = false\r\n            document.getElementById(\r\n              `node-${this.state.currRow}-${this.state.currCol}`\r\n            ).className = \"node\"\r\n\r\n            this.setState({ currRow: row, currCol: col })\r\n            const currFinishNode = this.state.grid[row][col]\r\n            currFinishNode.isFinish = true\r\n            document.getElementById(`node-${row}-${col}`).className =\r\n              \"node node-finish\"\r\n          }\r\n          this.setState({ FINISH_NODE_ROW: row, FINISH_NODE_COL: col })\r\n        } else if (this.state.isWallNode) {\r\n          const newGrid = getNewGridWithWallToggled(this.state.grid, row, col)\r\n          this.setState({ grid: newGrid })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseUp(row, col) {\r\n    if (!this.state.isRunning) {\r\n      this.setState({ mouseIsPressed: false })\r\n      if (this.state.isStartNode) {\r\n        const isStartNode = !this.state.isStartNode\r\n        this.setState({ isStartNode, START_NODE_ROW: row, START_NODE_COL: col })\r\n      } else if (this.state.isFinishNode) {\r\n        const isFinishNode = !this.state.isFinishNode\r\n        this.setState({\r\n          isFinishNode,\r\n          FINISH_NODE_ROW: row,\r\n          FINISH_NODE_COL: col,\r\n        })\r\n      }\r\n      this.getInitialGrid()\r\n    }\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    if (this.state.isStartNode) {\r\n      const isStartNode = !this.state.isStartNode\r\n      this.setState({ isStartNode, mouseIsPressed: false })\r\n    } else if (this.state.isFinishNode) {\r\n      const isFinishNode = !this.state.isFinishNode\r\n      this.setState({ isFinishNode, mouseIsPressed: false })\r\n    } else if (this.state.isWallNode) {\r\n      const isWallNode = !this.state.isWallNode\r\n      this.setState({ isWallNode, mouseIsPressed: false })\r\n      this.getInitialGrid()\r\n    }\r\n  }\r\n\r\n  /******************** Clear Board/Walls ********************/\r\n\r\n  clearGrid() {\r\n    if (!this.state.isRunning) {\r\n      const newGrid = this.state.grid.slice()\r\n      for (const row of newGrid) {\r\n        for (const node of row) {\r\n          let nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`\r\n          ).className\r\n          if (\r\n            nodeClassName !== \"node node-start\" &&\r\n            nodeClassName !== \"node node-finish\" &&\r\n            nodeClassName !== \"node node-wall\"\r\n          ) {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node\"\r\n            node.isVisited = false\r\n            node.distance = Infinity\r\n            node.distanceToFinishNode =\r\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\r\n              Math.abs(this.state.FINISH_NODE_COL - node.col)\r\n          }\r\n          if (nodeClassName === \"node node-finish\") {\r\n            node.isVisited = false\r\n            node.distance = Infinity\r\n            node.distanceToFinishNode = 0\r\n          }\r\n          if (nodeClassName === \"node node-start\") {\r\n            node.isVisited = false\r\n            node.distance = Infinity\r\n            node.distanceToFinishNode =\r\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\r\n              Math.abs(this.state.FINISH_NODE_COL - node.col)\r\n            node.isStart = true\r\n            node.isWall = false\r\n            node.previousNode = null\r\n            node.isNode = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clearWalls() {\r\n    if (!this.state.isRunning) {\r\n      const newGrid = this.state.grid.slice()\r\n      for (const row of newGrid) {\r\n        for (const node of row) {\r\n          let nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`\r\n          ).className\r\n          if (nodeClassName === \"node node-wall\") {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node\"\r\n            node.isWall = false\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /******************** Create Animations ********************/\r\n  visualize(algo) {\r\n    if (!this.state.isRunning) {\r\n      this.clearGrid()\r\n      this.toggleIsRunning()\r\n      const { grid } = this.state\r\n      const startNode =\r\n        grid[this.state.START_NODE_ROW][this.state.START_NODE_COL]\r\n      const finishNode =\r\n        grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL]\r\n      let visitedNodesInOrder\r\n      switch (algo) {\r\n        case \"Dijkstra\":\r\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode)\r\n          break\r\n        case \"AStar\":\r\n          visitedNodesInOrder = AStar(grid, startNode, finishNode)\r\n          break\r\n        case \"BFS\":\r\n          visitedNodesInOrder = bfs(grid, startNode, finishNode)\r\n          break\r\n        case \"DFS\":\r\n          visitedNodesInOrder = dfs(grid, startNode, finishNode)\r\n          break\r\n        default:\r\n          // should never get here\r\n          break\r\n      }\r\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode)\r\n      nodesInShortestPathOrder.push(\"end\")\r\n      this.animate(visitedNodesInOrder, nodesInShortestPathOrder)\r\n    }\r\n  }\r\n\r\n  animate(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder)\r\n        }, 10 * i)\r\n        return\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i]\r\n        const nodeClassName = document.getElementById(\r\n          `node-${node.row}-${node.col}`\r\n        ).className\r\n        if (\r\n          nodeClassName !== \"node node-start\" &&\r\n          nodeClassName !== \"node node-finish\"\r\n        ) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-visited\"\r\n        }\r\n      }, 10 * i)\r\n    }\r\n  }\r\n\r\n  /******************** Create path from start to finish ********************/\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      if (nodesInShortestPathOrder[i] === \"end\") {\r\n        setTimeout(() => {\r\n          this.toggleIsRunning()\r\n        }, i * 50)\r\n      } else {\r\n        setTimeout(() => {\r\n          const node = nodesInShortestPathOrder[i]\r\n          const nodeClassName = document.getElementById(\r\n            `node-${node.row}-${node.col}`\r\n          ).className\r\n          if (\r\n            nodeClassName !== \"node node-start\" &&\r\n            nodeClassName !== \"node node-finish\"\r\n          ) {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node node-shortest-path\"\r\n          }\r\n        }, i * 40)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { grid, mouseIsPressed } = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"pathnav\">\r\n          <button type=\"button\" onClick={() => this.visualize(\"Dijkstra\")}>\r\n            Dijkstra's\r\n          </button>\r\n          <button type=\"button\" onClick={() => this.visualize(\"AStar\")}>\r\n            A* (A-star)\r\n          </button>\r\n          <button type=\"button\" onClick={() => this.visualize(\"BFS\")}>\r\n            Breadth-first search\r\n          </button>\r\n          <button type=\"button\" onClick={() => this.visualize(\"DFS\")}>\r\n            Depth-First Search\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={() => this.clearGrid()}>\r\n            Clear Grid\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => this.clearWalls()}\r\n          >\r\n            Clear Walls\r\n          </button>\r\n          {this.state.isDesktopView ? (\r\n            <button type=\"button\" onClick={() => this.toggleView()}>\r\n              Mobile View\r\n            </button>\r\n          ) : (\r\n            <button type=\"button\" onClick={() => this.toggleView()}>\r\n              Desktop View\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <table\r\n          className=\"grid-container\"\r\n          onMouseLeave={() => this.handleMouseLeave()}\r\n        >\r\n          <tbody className=\"grid\">\r\n            {grid.map((row, rowIdx) => {\r\n              return (\r\n                <tr key={rowIdx}>\r\n                  {row.map((node, nodeIdx) => {\r\n                    const { row, col, isFinish, isStart, isWall } = node\r\n                    return (\r\n                      <Node\r\n                        key={nodeIdx}\r\n                        col={col}\r\n                        isFinish={isFinish}\r\n                        isStart={isStart}\r\n                        isWall={isWall}\r\n                        mouseIsPressed={mouseIsPressed}\r\n                        onMouseDown={(row, col) =>\r\n                          this.handleMouseDown(row, col)\r\n                        }\r\n                        onMouseEnter={(row, col) =>\r\n                          this.handleMouseEnter(row, col)\r\n                        }\r\n                        onMouseUp={() => this.handleMouseUp(row, col)}\r\n                        row={row}\r\n                      ></Node>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/******************** Create Walls ********************/\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  // mouseDown starts to act strange if I don't make newGrid and work off of grid instead.\r\n  const newGrid = grid.slice()\r\n  const node = newGrid[row][col]\r\n  if (!node.isStart && !node.isFinish && node.isNode) {\r\n    const newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    }\r\n    newGrid[row][col] = newNode\r\n  }\r\n  return newGrid\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called after the pathfinding methods.\r\nfunction getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = []\r\n  let currentNode = finishNode\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode)\r\n    currentNode = currentNode.previousNode\r\n  }\r\n  return nodesInShortestPathOrder\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const PathNav = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-content: center;\r\n  height: 50px;\r\n  width: 100%;\r\n\r\n  justify-content: space-evenly;\r\n  background-color: #264653;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`\r\n","// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function bfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  let nextNodesStack = [startNode];\r\n  while (nextNodesStack.length) {\r\n    const currentNode = nextNodesStack.shift();\r\n    if (currentNode === finishNode) return visitedNodesInOrder;\r\n\r\n    if (\r\n      !currentNode.isWall &&\r\n      (currentNode.isStart || !currentNode.isVisited)\r\n    ) {\r\n      currentNode.isVisited = true;\r\n      visitedNodesInOrder.push(currentNode);\r\n      const {col, row} = currentNode;\r\n      let nextNode;\r\n      if (row > 0) {\r\n        nextNode = grid[row - 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (row < grid.length - 1) {\r\n        nextNode = grid[row + 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col > 0) {\r\n        nextNode = grid[row][col - 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col < grid[0].length - 1) {\r\n        nextNode = grid[row][col + 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // return visitedNodesInOrder;\r\n}\r\n","// Returns all nodes in the order in which they were visited.\r\n// Make nodes point back to their previous node so that we can compute the shortest path\r\n// by backtracking from the finish node.\r\n\r\nexport function dfs(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  const nextNodesStack = [];\r\n  nextNodesStack.push(startNode);\r\n  while (nextNodesStack.length) {\r\n    const currentNode = nextNodesStack.pop();\r\n\r\n    if (currentNode === finishNode) {\r\n      return visitedNodesInOrder;\r\n    }\r\n\r\n    if (\r\n      !currentNode.isWall &&\r\n      (currentNode.isStart || !currentNode.isVisited)\r\n    ) {\r\n      currentNode.isVisited = true;\r\n      visitedNodesInOrder.push(currentNode);\r\n\r\n      const {col, row} = currentNode;\r\n      let nextNode;\r\n      if (row > 0) {\r\n        nextNode = grid[row - 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (row < grid.length - 1) {\r\n        nextNode = grid[row + 1][col];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col > 0) {\r\n        nextNode = grid[row][col - 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n      if (col < grid[0].length - 1) {\r\n        nextNode = grid[row][col + 1];\r\n        if (!nextNode.isVisited) {\r\n          nextNode.previousNode = currentNode;\r\n          nextNodesStack.push(nextNode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const Button = styled(Link)`\r\n  border-radius: 50px;\r\n\r\n  background: ${({ primary }) => (primary ? \"#01BF71\" : \"#010606\")};\r\n  white-space: nowrap;\r\n  padding: ${({ big }) => (big ? \"14px 48px\" : \"12px 30px\")};\r\n  color: ${({ dark }) => (dark ? \"#010606\" : \"#fff\")};\r\n  font-size: ${({ fontBig }) => (fontBig ? \"20px\" : \"16px\")};\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: ${({ primary }) => (primary ? \"#fff\" : \"#01BF71\")};\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/HeroSectionVideo.7d1ea6a9.mp4\";","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { MdKeyboardArrowRight, MdArrowForward } from \"react-icons/md\"\r\n\r\nexport const HeroContainer = styled.div`\r\n  background: #0c0c0c;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 30px;\r\n  height: 800px;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(\r\n        180deg,\r\n        rgba(0, 0, 0, 0.2) 0%,\r\n        rgba(0, 0, 0, 0.6) 100%\r\n      ),\r\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\r\n    z-index: 2;\r\n  }\r\n`\r\n\r\nexport const HeroBg = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`\r\nexport const VideoBg = styled.video`\r\n  width: 100%;\r\n  height: 100%;\r\n  -o-object-fit: cover;\r\n  object-fit: cover;\r\n  background: #232a34;\r\n`\r\nexport const HeroContent = styled.div`\r\n  z-index: 4;\r\n  max-width: 1200px;\r\n  position: absolute;\r\n  padding: 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const HeroH1 = styled.h1`\r\n  color: #fff;\r\n  font-size: 55px;\r\n  text-align: center;\r\n  /* animation: type 3s steps(17);\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  border-right: 6px solid white;\r\n  width: 17ch; */\r\n\r\n  /* @keyframes type {\r\n    0% {\r\n      width: 0ch;\r\n    }\r\n    100% {\r\n      width: 17ch;\r\n    }\r\n  } */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nexport const HeroP = styled.p`\r\n  margin-top: 24px;\r\n  color: #fff;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  max-width: 600px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 22px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nexport const HeroBtnWrapper = styled.div`\r\n  margin-top: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const ArrowForward = styled(MdArrowForward)`\r\n  margin-left: 8px;\r\n  font-size: 20px;\r\n`\r\n\r\nexport const ArrowRight = styled(MdKeyboardArrowRight)`\r\n  margin-left: 8px;\r\n  font-size: 20px;\r\n`\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React, { useState } from \"react\"\r\nimport { Button } from \"../ButtonElements\"\r\n\r\nimport Video from \"../../videos/HeroSectionVideo.mp4\"\r\nimport {\r\n  HeroContainer,\r\n  HeroBg,\r\n  VideoBg,\r\n  HeroContent,\r\n  HeroH1,\r\n  HeroP,\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"./HeroElements\"\r\nconst HeroSection = () => {\r\n  const [hover, setHover] = useState(false)\r\n  const onHover = () => {\r\n    setHover(!hover)\r\n  }\r\n  return (\r\n    <HeroContainer>\r\n      <HeroBg>\r\n        <VideoBg autoPlay loop muted src={Video} type=\"HeroSectionVideo/mp4\" />\r\n      </HeroBg>\r\n      <HeroContent>\r\n        <HeroH1>Algorithms Made Easy</HeroH1>\r\n        <HeroP>Let's go and learn new algorithms visually</HeroP>\r\n        <HeroBtnWrapper>\r\n          <Button\r\n            to=\"Sorting\"\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHover}\r\n            primary=\"true\"\r\n            dark=\"true\"\r\n          >\r\n            Get Started {hover ? <ArrowForward /> : <ArrowRight />}\r\n          </Button>\r\n        </HeroBtnWrapper>\r\n      </HeroContent>\r\n    </HeroContainer>\r\n  )\r\n}\r\n\r\nexport default HeroSection\r\n","import styled from \"styled-components\"\r\n\r\nexport const InfoContainer = styled.div`\r\n  color: #fff;\r\n  background: ${({ lightBg }) => (lightBg ? \"#f9f9f9\" : \"#000\")};\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 100px 0;\r\n  }\r\n`\r\nexport const InfoWrapper = styled.div`\r\n  display: grid;\r\n  z-index: 1;\r\n  height: 860px;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 0 24px;\r\n  justify-content: center;\r\n`\r\n\r\nexport const InfoRow = styled.div`\r\n  display: grid;\r\n  grid-auto-columns: minmax(auto, 1fr);\r\n  align-items: center;\r\n  grid-template-areas: ${({ imgStart }) =>\r\n    imgStart ? `'col2 col1'` : `'col1 col2'`};\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-areas: ${({ imgStart }) =>\r\n      imgStart ? `'col1' 'col2'` : `'col1 col1' 'col2 col2'`};\r\n  }\r\n`\r\n\r\nexport const Column1 = styled.div`\r\n  margin-bottom: 15px;\r\n  padding: 0 15px;\r\n  grid-area: col1;\r\n`\r\n\r\nexport const Column2 = styled.div`\r\n  margin-bottom: 15px;\r\n  padding: 0 15px;\r\n  grid-area: col2;\r\n`\r\n\r\nexport const TextWrapper = styled.div`\r\n  max-width: 540px;\r\n  padding-top: 0;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nexport const TopLine = styled.p`\r\n  color: #01bf71;\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  font-weight: 700;\r\n  letter-spacing: 1.4px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport const Heading = styled.h1`\r\n  color: ${({ lightText }) => (lightText ? \"#f7f8fa\" : \"#010606\")};\r\n  font-size: 48px;\r\n  line-height: 1.1;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 32px;\r\n  }\r\n`\r\nexport const Subtitle = styled.p`\r\n  max-width: 440px;\r\n  margin-bottom: 35px;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  color: ${({ darkText }) => (darkText ? \"#010606\" : \"#cfdbd5\")};\r\n`\r\n\r\nexport const ImgWrap = styled.div`\r\n  max-width: 555px;\r\n  height: 100%;\r\n`\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  margin: 0 0 10px 0;\r\n  padding-right: 0;\r\n`\r\n\r\nexport const BtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\"\r\nimport { Button } from \"../ButtonElements\"\r\nimport {\r\n  InfoContainer,\r\n  InfoWrapper,\r\n  InfoRow,\r\n  Column1,\r\n  TextWrapper,\r\n  TopLine,\r\n  Heading,\r\n  BtnWrap,\r\n  Subtitle,\r\n  Column2,\r\n  ImgWrap,\r\n  Img,\r\n  to,\r\n} from \"./InfoElements\"\r\nconst InfoSection = ({\r\n  lightBg,\r\n  id,\r\n  to,\r\n  topline,\r\n  imgStart,\r\n  darkText,\r\n  lightText,\r\n  headline,\r\n  description,\r\n  buttonLabel,\r\n  img,\r\n  alt,\r\n  primary,\r\n  dark,\r\n  dark2,\r\n}) => {\r\n  return (\r\n    <>\r\n      <InfoContainer lightBg={lightBg} id={id}>\r\n        <InfoWrapper>\r\n          <InfoRow imgStart={imgStart}>\r\n            <Column1>\r\n              <TextWrapper>\r\n                <TopLine>{topline}</TopLine>\r\n                <Heading lightText={lightText}>{headline}</Heading>\r\n                <Subtitle darkText={darkText}>{description}</Subtitle>\r\n\r\n                <BtnWrap>\r\n                  <Button\r\n                    to={to}\r\n                    smooth={true}\r\n                    duration={500}\r\n                    spy={true}\r\n                    exaact=\"true\"\r\n                    offset={-80}\r\n                    primary={primary ? 1 : 0}\r\n                    dark={dark ? 1 : 0}\r\n                    dark2={dark2 ? 1 : 0}\r\n                  >\r\n                    {buttonLabel}\r\n                  </Button>\r\n                </BtnWrap>\r\n              </TextWrapper>\r\n            </Column1>\r\n            <Column2>\r\n              <ImgWrap>\r\n                <Img src={img} alt={alt} />\r\n              </ImgWrap>\r\n            </Column2>\r\n          </InfoRow>\r\n        </InfoWrapper>\r\n      </InfoContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InfoSection\r\n","export const toSortObjectData = {\r\n  id: \"Sorting\",\r\n  to: \"Sorting\",\r\n  lightBg: false,\r\n  lightText: true,\r\n  lightTextDesc: true,\r\n  topline: \"Sorting Visualization\",\r\n  headline: \"Sorting Algorithms made easy to visualize for you!!\",\r\n  description:\r\n    \"A Sorting Algorithm is used to rearrange a given array or list elements according to a comparison operator on the elements.\",\r\n  buttonLabel: \"Get Started\",\r\n  imgStart: true,\r\n  img: require(\"../../images/girl.svg\").default,\r\n  alt: \"girl\",\r\n  dark: true,\r\n  primary: true,\r\n  darkText: false,\r\n}\r\n\r\nexport const toPathfindObjectData = {\r\n  id: \"Pathfinding\",\r\n  to: \"PathfindingVisualizer\",\r\n  lightBg: true,\r\n  lightText: false,\r\n  lightTextDesc: false,\r\n  topline: \"Pathfinding Visualization\",\r\n  headline: \"Pathfinding Algorithms made easy to visualize for you!!\",\r\n  description:\r\n    \" Pathfinding algorithms are usually an attempt to solve the shortest path problem in graph theory.\",\r\n  buttonLabel: \"Get Started\",\r\n  imgStart: false,\r\n  img: require(\"../../images/boyMaze.svg\").default,\r\n  alt: \"girl\",\r\n  dark: false,\r\n  primary: false,\r\n  darkText: true,\r\n}\r\n\r\nexport const About = {\r\n  id: \"About\",\r\n  to: \"About\",\r\n  lightBg: true,\r\n  lightText: false,\r\n  lightTextDesc: false,\r\n  topline: \"Why i made this..\",\r\n  headline:\r\n    \"To make everyone literate about Pathfinding and Sorting Algorithms.\",\r\n  description:\r\n    \"Pathfinding and sorting algorithms visualization website will help people learn new algorithms and also the people who are not able to learn those algorithms by traditional methods. On website we will have various pathfinding and sorting algorithms with short theory with programs.\",\r\n  buttonLabel: \"Get Started\",\r\n  imgStart: false,\r\n  img: require(\"../../images/about.svg\").default,\r\n  alt: \"girl\",\r\n  dark: false,\r\n  primary: false,\r\n  darkText: true,\r\n}\r\n\r\nexport const Contact = {\r\n  id: \"Contact\",\r\n  to: \"Contact\",\r\n  lightBg: false,\r\n  lightText: true,\r\n  lightTextDesc: true,\r\n  topline: \"Computer Engineer\",\r\n  headline: \"I am Ajay Jadhav\",\r\n  description:\r\n    \"I LOVE DEVELOPING, want a budget friendly website that looks AWESOME.\",\r\n  buttonLabel: \"Contact Me! \",\r\n  imgStart: false,\r\n  img: require(\"../../images/1.jpg\").default,\r\n  alt: \"girl\",\r\n  dark: true,\r\n  primary: true,\r\n  darkText: false,\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport HeroSection from \"../components/HeroSection\"\r\nimport InfoSection from \"../components/InfoSection\"\r\nimport {\r\n  toSortObjectData,\r\n  toPathfindObjectData,\r\n  About,\r\n  Contact,\r\n} from \"../components/InfoSection/data\"\r\n\r\nconst Home = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n  return (\r\n    <>\r\n      <Sidebar isOpen={isOpen} toggle={toggle} />\r\n      <Navbar toggle={toggle} />\r\n      <HeroSection />\r\n      <InfoSection {...toPathfindObjectData} />\r\n      <InfoSection {...toSortObjectData} />\r\n      <InfoSection {...About} />\r\n      <InfoSection {...Contact} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\nimport Sorting from \"./Sorting\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Menu from \"../components/Menu\"\nimport PathfindingVisualizer from \"../PathfindingVisualizer/PathfindingVisualizer\"\nimport Home from \"./index\"\nimport Navbar from \"../components/Navbar\"\n\nfunction App() {\n  return (\n    // <Router>\n    //   <Home />\n    // </Router>\n\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Sorting\" component={Sorting} exact />\n        <Route\n          path=\"/PathfindingVisualizer\"\n          component={PathfindingVisualizer}\n          exact\n        />\n        <Route\n          path=\"/Contact\"\n          component={() => {\n            window.location.replace(\n              \"https://www.linkedin.com/in/iamajayjadhav/\"\n            )\n            return null\n          }}\n        />\n      </Switch>\n    </Router>\n\n    //    <BrowserRouter>\n    //    <div>\n    //      <Menu />\n    //      <Switch>\n    //        <Route path=\"/\" exact component={Home} />\n    //        <Route path=\"/sorting\" component={Sorting} />\n    //        <Route path=\"/pathfinding\" component={Pathfinding} />\n    //      </Switch>\n    //    </div>\n    //  </BrowserRouter>\n  )\n}\n\n// const Home = () => {\n//   return (\n//     <div>\n//       <h1>Hello</h1>\n//     </div>\n//   )\n// }\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./pages/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}